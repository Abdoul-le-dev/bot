from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove
from telegram.ext import ContextTypes, CommandHandler, MessageHandler, filters

# Dictionnaire pour stocker les informations utilisateur temporairement
user_data = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    
    # Clavier de consentement
    keyboard = [
        [KeyboardButton("J'accepte"), KeyboardButton("Je décline")]
    ]

    reply_markup = ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=True
    )

    # Demande de consentement
    await update.message.reply_text(
        """Bonjour, je suis Thomas.

Avant de commencer, nous souhaiterions établir un premier contact afin de mieux vous accompagner. En enregistrant votre contact, vous aurez un accès facile à toutes nos actualités et ressources.

Merci de bien vouloir confirmer votre consentement pour l’enregistrement de ces informations.

Soyez assuré que nous respectons pleinement votre vie privée, et vous pouvez demander la suppression de vos informations à tout moment.""",
        reply_markup=reply_markup
    )

    # Enregistrer l'état de l'utilisateur
    user_data[user_id] = {"step": "awaiting_consent"}

# Fonction pour gérer la réponse de l'utilisateur
async def handle_response(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_response = update.message.text

    # Vérifie l'étape actuelle de l'utilisateur
    if user_id in user_data:
        current_step = user_data[user_id].get("step")

        if current_step == "awaiting_consent":
            if user_response == "J'accepte":

                # Demander l'indicatif du pays

                await update.message.reply_text("Merci pour votre consentement ! Veuillez maintenant entrer l'indicatif de votre pays (ex : +229 pour le Bénin) :")
                user_data[user_id]["step"] = "awaiting_country_code"  
            
            elif user_response == "Je décline":
                # Si l'utilisateur décline
                await update.message.reply_text("Nous respectons votre décision. N'hésitez pas à revenir vers nous si vous changez d'avis.", reply_markup=ReplyKeyboardRemove())
                del user_data[user_id]

        elif current_step == "awaiting_country_code":
            # Stocker l'indicatif du pays et demander le numéro de téléphone
            user_data[user_id]["country_code"] = user_response
            await update.message.reply_text("Merci ! Veuillez maintenant entrer votre numéro de téléphone (sans l'indicatif) :")
            user_data[user_id]["step"] = "awaiting_phone"

        elif current_step == "awaiting_phone":
            # Stocker le numéro de téléphone et demander le nom
            user_data[user_id]["phone"] = user_response
            await update.message.reply_text("Merci ! Veuillez maintenant entrer votre nom :")
            user_data[user_id]["step"] = "awaiting_last_name"

        elif current_step == "awaiting_last_name":
            # Stocker le nom et demander le prénom
            user_data[user_id]["last_name"] = user_response
            await update.message.reply_text("Merci ! Enfin, veuillez entrer votre prénom :")
            user_data[user_id]["step"] = "awaiting_first_name"

        elif current_step == "awaiting_first_name":
            # Stocker le prénom et finaliser
            user_data[user_id]["first_name"] = user_response

            # Afficher un message de confirmation
            await update.message.reply_text(
                f"""Bienvenue dans notre communauté de trading, {user_data[user_id]["first_name"]} !

Nous avons bien enregistré vos informations :
- Indicatif : {user_data[user_id]["country_code"]}
- Numéro : {user_data[user_id]["phone"]}
- Nom : {user_data[user_id]["last_name"]}
- Prénom : {user_data[user_id]["first_name"]}

Si vous n'avez pas encore enregistré mon numéro, veuillez le faire :
Mon numéro : +229 54545454
Mon nom : Abdoul Abdoul""",
                reply_markup=ReplyKeyboardRemove()
            )

            # Supprimer les informations utilisateur du dictionnaire (ou les sauvegarder si nécessaire)
            del user_data[user_id]

# Handlers
start_handler = CommandHandler("start", start)
response_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, handle_response)

# Ajouter les handlers à ton application
application.add_handler(start_handler)
application.add_handler(response_handler)
