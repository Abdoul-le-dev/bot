import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..','..', '..')))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'bot.settings')
import django
from django.db import models
from asgiref.sync import sync_to_async
django.setup()
from dotenv import load_dotenv
from telegram import ReplyKeyboardMarkup, KeyboardButton, Update, ReplyKeyboardRemove
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from bots.models import Utilisateur


load_dotenv()

token = os.getenv('TOKEN')

# Dictionnaire pour stocker les informations utilisateur temporairement
user_data = {}


def enregistrer_utilisateur(telegram_user_id, indicatif, numero, nom, prenom, consentement):
    user, created = Utilisateur.objects.get_or_create(
        telegram_user_id=telegram_user_id,
        defaults={
            'indicatif': indicatif,
            'numero': numero,
            'nom': nom,
            'prenom': prenom,
            'consentement': consentement
        }
    )
    if not created:
        user.indicatif = indicatif
        user.numero = numero
        user.nom = nom
        user.prenom = prenom
        user.consentement = consentement
        user.save()
    return user


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id  # ID de l'utilisateur
    user_data[user_id] = {"id": user_id}

    keyboard = [
        [KeyboardButton("J'accepte"), KeyboardButton("Je décline")]
    ]

    reply_markup = ReplyKeyboardMarkup(
        keyboard=keyboard,
        resize_keyboard=True,
        one_time_keyboard=True
    )
    
    await update.message.reply_text("""Bonjour, je suis Thomas.

Avant de commencer, nous souhaiterions établir un premier contact afin de mieux vous accompagner. En enregistrant votre contact, vous aurez un accès facile à toutes nos actualités et ressources.

Merci de bien vouloir confirmer votre consentement pour l’enregistrement de ces informations.

Soyez assuré que nous respectons pleinement votre vie privée, vous pouvez demander la suppression de vos informations à tout moment.""", reply_markup=reply_markup)
    
    user_data[user_id]["step"] = "awaiting_consent"


async def responce_consentement(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    user_response = update.message.text

    if user_id in user_data:
        etape_actuel = user_data[user_id].get('step')

        if etape_actuel == "awaiting_consent":
            if user_response == "J'accepte":
                user_data[user_id]["consentement"] = "J'accepte"
                await update.message.reply_text("Merci pour votre consentement ! Veuillez maintenant entrer l'indicatif de votre pays (ex : +229 pour le Bénin) :")
                user_data[user_id]["step"] = "country_code"
            elif user_response == "Je décline":
                await update.message.reply_text("Nous respectons votre décision. N'hésitez pas à revenir vers nous si vous changez d'avis.")
                del user_data[user_id]  # Supprimer les informations de l'utilisateur s'il décline

        elif etape_actuel == "country_code":
            user_data[user_id]["country_code"] = user_response
            await update.message.reply_text("Merci ! Veuillez maintenant entrer votre numéro de téléphone (sans l'indicatif) :")
            user_data[user_id]["step"] = "awaiting_phone"

        elif etape_actuel == "awaiting_phone":
            user_data[user_id]["phone"] = user_response
            await update.message.reply_text("Merci ! Veuillez maintenant entrer votre nom :")
            user_data[user_id]["step"] = "awaiting_last_name"

        elif etape_actuel == "awaiting_last_name":
            user_data[user_id]["last_name"] = user_response
            await update.message.reply_text("Merci ! Enfin, veuillez entrer votre prénom :")
            user_data[user_id]["step"] = "awaiting_first_name"

        elif etape_actuel == "awaiting_first_name":
            user_data[user_id]["first_name"] = user_response

            keyboard = [
                [KeyboardButton("Infos correctes"), KeyboardButton("Infos incorrectes")]
            ]

            reply_markup = ReplyKeyboardMarkup(
                keyboard=keyboard,
                resize_keyboard=True,
                one_time_keyboard=True
            )

            await update.message.reply_text(f"""Bienvenue dans notre communauté de trading, {user_data[user_id]["first_name"]} !

Nous avons bien enregistré vos informations :
- Indicatif : {user_data[user_id]["country_code"]}
- Numéro : {user_data[user_id]["phone"]}
- Nom : {user_data[user_id]["last_name"]}
- Prénom : {user_data[user_id]["first_name"]}

Veuillez m'enregistrer si c'est pas fait.

Mon numéro : +229 54545454
Mon nom : Abdoul Abdoul

Nous nous sommes enregistrés à présent, vous aurez ainsi accès à toute ma fil d'actualité, les informations et ressources liées à ma communauté.""", reply_markup=reply_markup)
            
            user_data[user_id]["step"] = "check_info"

        elif etape_actuel == "check_info":
            if user_response == "Infos correctes":
                user = awaitenregistrer_utilisateur(
                    telegram_user_id=user_id,
                    indicatif=user_data[user_id]["country_code"],
                    numero=user_data[user_id]["phone"],
                    nom=user_data[user_id]["last_name"],
                    prenom=user_data[user_id]["first_name"],
                    consentement=True
                )
                await update.message.reply_text("Vos informations ont été enregistrées avec succès !")

                keyboard = [
                    [KeyboardButton("Initiation au Trading"), KeyboardButton("Rejoindre la formation complète")],
                    [KeyboardButton("Communauté VIP RMI class"), KeyboardButton("Participer aux sessions live")],
                    [KeyboardButton("Mes réseaux sociaux"), KeyboardButton("Prise de rendez-vous")],
                    [KeyboardButton("Questions"), KeyboardButton("Discuter avec moi")]
                ]

                reply_markup = ReplyKeyboardMarkup(
                    keyboard=keyboard,
                    resize_keyboard=True,
                    one_time_keyboard=True
                )

                await update.message.reply_text(
                    "Merci pour la confirmation ! Choisissez une option pour commencer :",
                    reply_markup=reply_markup
                )
                user_data[user_id]["step"] = "menu_options"

            elif user_response == "Infos incorrectes":
                await update.message.reply_text("Reprenons l'enregistrement de vos informations.")
                user_data[user_id]["step"] = "awaiting_country_code"
                await update.message.reply_text("Veuillez entrer l'indicatif de votre pays (ex : +229 pour le Bénin) :")

if __name__ == '__main__':
    app = Application.builder().token(token).build()

    app.add_handler(CommandHandler('start', start))
    response_handler = MessageHandler(filters.TEXT & ~filters.COMMAND, responce_consentement)
    app.add_handler(response_handler)

    app.run_polling(poll_interval=1)
